#!/usr/bin/perl
# Generate changesets for changes between two keyrings.
use Cwd q{abs_path};
use File::Temp qw(tempdir);
use warnings;
use strict;

if (@ARGV < 2) {
	die "Usage: jetring-gen oldring.gpg newring.gpg [comment]\n";
}

# avoid gnupg touching ~/.gnupg
$ENV{GNUPGHOME}=tempdir("jetring.XXXXXXXXXX", TMPDIR => 1, CLEANUP => 1);

my $old=abs_path(shift);
my $new=abs_path(shift);
my $comment=shift || "merging changes";

my $date=`date -R`;
chomp $date;

open(DIFF, "jetring-diff $old $new|") || die "jetring-diff: $!";
while (<DIFF>) {
	next unless /^?pub:/;

	chomp;
	my @fields=split(":", $_);

	if (/-pub:/) {
		genchangeset("delete-$fields[4]",
			"delete-key $fields[4]",
			"y");
	}
	elsif (/\+pub:/) {
		genchangeset("add-$fields[4]",
			"import",
			getkey($fields[4]));
	}
	elsif (/ pub/) {
		genchangeset("modify-$fields[4]",
			"import",
			getkey($fields[4]));
	}
}
close DIFF;
	
sub genchangeset {
	my $fn=shift;
	my $action=shift;
	my $data=shift;

	if ($data=~/\n/) {
		$data=~s/^/  /mg;
		$data="\n".$data;
	}

	open(OUT, ">$fn") || die "$fn: $!";
	print OUT <<"EOF";
Comment: $comment
Date: $date
Action: $action
Data: $data
EOF
	close OUT;

	print "$fn\n";
}

sub getkey {
	my $id=shift;
	my $key=`gpg --no-auto-check-trustdb --options /dev/null --no-default-keyring --keyring "$new" -a --export "$id"`;
	return $key;
}
